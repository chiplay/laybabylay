// Generated by CoffeeScript 1.6.3
(function() {
  var Backbone, localStorage;

  Backbone = window.Backbone, localStorage = window.localStorage;

  describe('monkey patching', function() {
    return it('aliases Backbone.sync to backboneSync', function() {
      expect(window.backboneSync).toBeDefined();
      return expect(window.backboneSync.identity).toEqual('sync');
    });
  });

  describe('offline localStorage sync', function() {
    var collection;
    collection = {}.collection;
    beforeEach(function() {
      localStorage.clear();
      localStorage.setItem('cats', '2,3,a');
      localStorage.setItem('cats_dirty', '2,a');
      localStorage.setItem('cats_destroyed', '3');
      localStorage.setItem('cats2', '{"id": "2", "color": "auburn"}');
      localStorage.setItem('cats3', '{"id": "3", "color": "burgundy"}');
      localStorage.setItem('catsa', '{"id": "a", "color": "scarlet"}');
      collection = new Backbone.Collection([
        {
          id: 2,
          color: 'auburn'
        }, {
          id: 3,
          color: 'burgundy'
        }, {
          id: 'a',
          color: 'scarlet'
        }
      ]);
      return collection.url = function() {
        return 'cats';
      };
    });
    describe('syncDirtyAndDestroyed', function() {
      return it('calls syncDirty and syncDestroyed', function() {
        var syncDestroyed, syncDirty;
        syncDirty = spyOn(Backbone.Collection.prototype, 'syncDirty');
        syncDestroyed = spyOn(Backbone.Collection.prototype, 'syncDestroyed');
        collection.syncDirtyAndDestroyed();
        expect(syncDirty).toHaveBeenCalled();
        return expect(syncDestroyed).toHaveBeenCalled();
      });
    });
    describe('syncDirty', function() {
      it('finds and saves all dirty models', function() {
        var saveInteger, saveString;
        saveInteger = spyOn(collection.get(2), 'save').andCallThrough();
        saveString = spyOn(collection.get('a'), 'save').andCallThrough();
        collection.syncDirty();
        expect(saveInteger).toHaveBeenCalled();
        expect(saveString).toHaveBeenCalled();
        return expect(localStorage.getItem('cats_dirty')).toBeFalsy();
      });
      return it('works when there are no dirty records', function() {
        localStorage.removeItem('cats_dirty');
        return collection.syncDirty();
      });
    });
    return describe('syncDestroyed', function() {
      it('finds all models marked as destroyed and destroys them', function() {
        var destroy;
        destroy = spyOn(collection.get(3), 'destroy');
        collection.syncDestroyed();
        return expect(localStorage.getItem('cats_destroyed')).toBeFalsy();
      });
      return it('works when there are no destroyed records', function() {
        localStorage.setItem('cats_destroyed', '');
        return collection.syncDestroyed();
      });
    });
  });

}).call(this);
